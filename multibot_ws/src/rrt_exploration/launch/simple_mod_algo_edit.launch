<?xml version="1.0"?>
<!-- Launch file for the rrt-detector and the assigner -->


<launch>
<arg name="eta" value="1.0"/>
<arg name="Geta" value="15.0"/>
<param name="namespace_init_count" value="1"/>


  <node pkg="rrt_exploration" type="global_rrt_detector" name="global_detector" output="screen">
  <param name="eta" value="$(arg Geta)"/>    <!-- Controls growth rate of the RRT -->
  <param name="map_topic" value="/map"/>
  </node>
  
  <node pkg="rrt_exploration" type="local_rrt_detector" name="local_detector" output="screen">
  <param name="eta" value="$(arg eta)"/>
  <param name="map_topic" value="/map"/>          <!-- Initially /map -->
  <param name="robot_frame" value="base_link"/>	<!-- intially /base_link -->
  </node>
 
  
  <node pkg="rrt_exploration" type="filter_algo_edit.py" name="filter" output="screen">
  <param name="map_topic" value="/map"/> <!-- Specifies the map topic used by the filter node to delete old frontier
points. Default value (/robot 1/map) -->
  <param name="info_radius" value="1"/>  <!-- information gain radius. Radius around the (frontier) point considered-->
  <param name="costmap_clearing_threshold" value="50"/> <!-- Any frontier point with a cost value higher than this is invalid, default 70 -->
  <param name="goals_topic" value="/detected_points"/>
  <param name="namespace" value=""/> 
  <param name="n_robots" value="1"/>
  <param name="rate" value="100"/>
  </node>
  
  <node pkg="rrt_exploration" type="assigner_algo_edit.py" name="assigner" output="screen">
  <param name="map_topic" value="/map"/> <!-- Specifies the map topic used by the robot task allocator node to
calculate the information gain of frontier points (/robot 1/map) -->
  <param name="global_frame" value="map"/>
  <param name="info_radius" value="1"/> 
  <param name="info_multiplier" value="3.0"/> <!-- lambda, weight for information gain-->
  <param name="hysteresis_radius" value="3.0"/> 
  <param name="hysteresis_gain" value="2.0"/> 
  <param name="frontiers_topic" value="filtered_points"/> 
  <param name="n_robots" value="1"/>
  <param name="namespace" value=""/>
  <param name="delay_after_assignement" value="0.5"/> <!-- No. of seconds to wait after robot assingned frontier point -->
  <param name="rate" value="100"/>
  </node>
  
</launch>
